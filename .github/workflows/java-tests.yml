name: Java Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend-java/**'
      - 'pom.xml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend-java/**'
      - 'pom.xml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [11, 17, 21]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mommyshops_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:6
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-

    - name: Set up environment variables
      run: |
        echo "SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/mommyshops_test" >> $GITHUB_ENV
        echo "SPRING_DATASOURCE_USERNAME=postgres" >> $GITHUB_ENV
        echo "SPRING_DATASOURCE_PASSWORD=postgres" >> $GITHUB_ENV
        echo "SPRING_REDIS_HOST=localhost" >> $GITHUB_ENV
        echo "SPRING_REDIS_PORT=6379" >> $GITHUB_ENV
        echo "JWT_SECRET=test-secret-key-for-github-actions" >> $GITHUB_ENV
        echo "SPRING_PROFILES_ACTIVE=test" >> $GITHUB_ENV

    - name: Run Checkstyle
      run: |
        cd backend-java
        mvn checkstyle:check

    - name: Run SpotBugs
      run: |
        cd backend-java
        mvn spotbugs:check

    - name: Run tests
      run: |
        cd backend-java
        mvn clean test -Dspring.profiles.active=test

    - name: Generate test report
      run: |
        cd backend-java
        mvn surefire-report:report

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: java-test-results-${{ matrix.java-version }}
        path: |
          backend-java/target/surefire-reports/
          backend-java/target/site/
          backend-java/target/spotbugsXml.xml
          backend-java/target/checkstyle-result.xml

  integration-test:
    runs-on: ubuntu-latest
    needs: test

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mommyshops_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:6
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-

    - name: Set up environment variables
      run: |
        echo "SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/mommyshops_test" >> $GITHUB_ENV
        echo "SPRING_DATASOURCE_USERNAME=postgres" >> $GITHUB_ENV
        echo "SPRING_DATASOURCE_PASSWORD=postgres" >> $GITHUB_ENV
        echo "SPRING_REDIS_HOST=localhost" >> $GITHUB_ENV
        echo "SPRING_REDIS_PORT=6379" >> $GITHUB_ENV
        echo "JWT_SECRET=test-secret-key-for-github-actions" >> $GITHUB_ENV
        echo "SPRING_PROFILES_ACTIVE=integration-test" >> $GITHUB_ENV

    - name: Run integration tests
      run: |
        cd backend-java
        mvn clean test -Dspring.profiles.active=integration-test

    - name: Upload integration test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: java-integration-test-results
        path: backend-java/target/surefire-reports/

  e2e-test:
    runs-on: ubuntu-latest
    needs: [test, integration-test]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mommyshops_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:6
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-

    - name: Set up environment variables
      run: |
        echo "SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/mommyshops_test" >> $GITHUB_ENV
        echo "SPRING_DATASOURCE_USERNAME=postgres" >> $GITHUB_ENV
        echo "SPRING_DATASOURCE_PASSWORD=postgres" >> $GITHUB_ENV
        echo "SPRING_REDIS_HOST=localhost" >> $GITHUB_ENV
        echo "SPRING_REDIS_PORT=6379" >> $GITHUB_ENV
        echo "JWT_SECRET=test-secret-key-for-github-actions" >> $GITHUB_ENV
        echo "SPRING_PROFILES_ACTIVE=e2e-test" >> $GITHUB_ENV

    - name: Run E2E tests
      run: |
        cd backend-java
        mvn clean test -Dspring.profiles.active=e2e-test

    - name: Upload E2E test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: java-e2e-test-results
        path: backend-java/target/surefire-reports/
